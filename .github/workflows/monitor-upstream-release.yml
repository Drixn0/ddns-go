name: 监测原仓库新Release并触发发布
on:
  schedule:
    - cron: '0 * * * *'  # 每小时检查一次
  workflow_dispatch:  # 允许手动测试

jobs:
  monitor-and-trigger:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write  # 新增：允许触发其他工作流的权限
    steps:
      - name: 检出仓库
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: 获取原仓库最新Release标签
        id: get_upstream_release
        env:
          UPSTREAM_OWNER: 'jeessy2'  # 替换为实际值
          UPSTREAM_REPO: 'ddns-go'       # 替换为实际值
        run: |
          RESPONSE=$(curl -s "https://api.github.com/repos/$UPSTREAM_OWNER/$UPSTREAM_REPO/releases/latest")
          UPSTREAM_TAG=$(echo "$RESPONSE" | jq -r '.tag_name')
          if [[ $UPSTREAM_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
            echo "upstream_tag=$UPSTREAM_TAG" >> $GITHUB_OUTPUT
          else
            echo "upstream_tag=" >> $GITHUB_OUTPUT
          fi

      - name: 读取上次检测到的标签缓存
        id: cache_last_tag
        uses: actions/cache@v3
        with:
          path: last_upstream_tag
          key: ${{ runner.os }}-upstream-tag

      - name: 生成并推送新标签
        id: push_tag
        if: steps.get_upstream_release.outputs.upstream_tag != '' && steps.get_upstream_release.outputs.upstream_tag != steps.cache_last_tag.outputs.cache-hit
        env:
          UPSTREAM_TAG: ${{ steps.get_upstream_release.outputs.upstream_tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          NEW_TAG="${UPSTREAM_TAG}-sync-${TIMESTAMP}"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_OUTPUT  # 输出标签名供后续步骤使用

          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "$NEW_TAG" -m "同步原仓库Release: $UPSTREAM_TAG"
          git push origin "$NEW_TAG"
          echo "已推送新标签: $NEW_TAG"

      - name: 强制触发 release.yml 工作流
        if: steps.push_tag.outputs.NEW_TAG != ''  # 仅当新标签推送成功时触发
        env:
          NEW_TAG: ${{ steps.push_tag.outputs.NEW_TAG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 通过 GitHub API 直接触发 release.yml，指定新标签作为参数
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/workflows/release.yml/dispatches" \
            -d '{"ref":"'"$NEW_TAG"'"}'
          echo "已强制触发 release.yml，使用标签: $NEW_TAG"

      - name: 更新标签缓存
        if: steps.get_upstream_release.outputs.upstream_tag != ''
        run: |
          echo "${{ steps.get_upstream_release.outputs.upstream_tag }}" > last_upstream_tag
